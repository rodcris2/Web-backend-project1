Project Description
The project used python libraries such as “http.server”, “http.client”, “socketserver”, etc to connect to an API and server to filter profanity. The project works by connecting to FOAAS and passing the message to PurgoMalum which will filter the profanity. This is then returned to the user in the form of an HTML page.
Redact.py
This python file is responsible for grabbing the message from FOAAS’s API in order to “redact” and filter the message entered by the user. The libraries needed to accomplish this include the following: “sys”, “http.client”, “json”, and “urllib.parse”. It does this by first connecting to the FOAAS using the client library. After connecting to FOAAS we create a GET request which loads the user’s request and message. Next we connect to the purgomalum API by establishing the connection using “http.client”. Once again the file makes a GET request to the client and we wait for a response. After the JSON was loaded onto the API the message is filtered/redact and returned/printed as a JSON to the user. The last thing that runs is to make sure we close the connections.
Server.py
This python file is responsible for displaying the message and signature in a HTML format by using the “redact” function. The libraries needed to accomplish this include the following: “sys”, “http.client”, “http.server”, “json”, and “urllib.parse”.  It does it by creating a server so the user would be able to use the address. We then connect onto the server by using any of the foass commands and if not properly named it will display the foaas website for reference. As the user connects to the server the path that the user entered is retrieved and sent to the FOAAS and PurgoMalum API's and in return we will receive our JSON filtered message and signature from that path. It will then be saved to be displayed in a HTML format for the user to see.